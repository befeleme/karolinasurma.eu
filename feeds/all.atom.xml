<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A blog</title><link href="https://karolinasurma.eu/" rel="alternate"></link><link href="https://karolinasurma.eu/feeds/all.atom.xml" rel="self"></link><id>https://karolinasurma.eu/</id><updated>2021-03-20T14:00:00+01:00</updated><entry><title>Draw a map! (2/2)</title><link href="https://karolinasurma.eu/draw-a-map-2-2.html" rel="alternate"></link><published>2021-03-20T14:00:00+01:00</published><updated>2021-03-20T14:00:00+01:00</updated><author><name>Karo</name></author><id>tag:karolinasurma.eu,2021-03-20:/draw-a-map-2-2.html</id><summary type="html">&lt;p&gt;In the &lt;a href="./draw-a-map-1.html"&gt;first part&lt;/a&gt; you've learned about a tool called uMap. 
For some use cases a static map is enough.&lt;/p&gt;
&lt;p&gt;OpenStreetMap is however very much alive and changes every second.
You may want to reflect those changes in your map.
Real time requests aren't feasible with current OSM state. 
If …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the &lt;a href="./draw-a-map-1.html"&gt;first part&lt;/a&gt; you've learned about a tool called uMap. 
For some use cases a static map is enough.&lt;/p&gt;
&lt;p&gt;OpenStreetMap is however very much alive and changes every second.
You may want to reflect those changes in your map.
Real time requests aren't feasible with current OSM state. 
If you try to send too many of them, you may end up with a ban on Overpass servers.&lt;/p&gt;
&lt;p&gt;Let's say you'd like to update the map nightly, which shouldn't be too hard on Overpass.&lt;/p&gt;
&lt;h2&gt;Where to for lunch?&lt;/h2&gt;
&lt;p&gt;My goal was to display all restaurants where I can eat in the region I live.
I wanted to filter for places which serve &lt;em&gt;plant-based menu&lt;/em&gt; and display them on the map.
This way I not only know where to go for lunch, but also have a visual clue when it comes to updating non-existent places. &lt;/p&gt;
&lt;p&gt;Let's see how to proceed with such a map.&lt;/p&gt;
&lt;p&gt;At this point you know:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to ask for the data you're interested in&lt;/li&gt;
&lt;li&gt;how to take the data from Overpass and put them in the map&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What's the goal?&lt;/p&gt;
&lt;p&gt;Automate the process and set it to ask for data periodically, every night.&lt;/p&gt;
&lt;h2&gt;Git scraping for the rescue&lt;/h2&gt;
&lt;p&gt;You need a machine to perform some actions in the middle of the night.
The actions contain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;requesting the data&lt;/li&gt;
&lt;li&gt;storing the data&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Where to store data?&lt;/h3&gt;
&lt;p&gt;For small data samples (like restaurants in your city), &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; can be a place of choice.
Just remember, GitHub was not designed to be free database. 
It won't let you store too much data in a repository.&lt;/p&gt;
&lt;h3&gt;How to request data?&lt;/h3&gt;
&lt;p&gt;There is a technique called &lt;a href="https://simonwillison.net/2020/Oct/9/git-scraping/"&gt;Git scraping&lt;/a&gt; shown by &lt;a href="https://honzajavorek.cz/"&gt;Honza Javorek&lt;/a&gt; on one &lt;a href="https://pyvo.cz/"&gt;Pyvo&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;GitHub provides a tool called GitHub Actions which you can set up to perform various tasks for you.
Like for example... calling an API request and, in case the response file is changed, commit it automatically to a repository.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Git note&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you're reading this and struggle with terms like 'repository' or 'commit', consider learning about Git basics first, for example &lt;a href="https://www.freecodecamp.org/news/learn-the-basics-of-git-in-under-10-minutes-da548267cc91/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;How to get a valid URL to send requests?&lt;/h4&gt;
&lt;p&gt;Once you've built an Overpass query that satisfies you, look for &lt;strong&gt;Export&lt;/strong&gt; option in the menu.
Then find &lt;strong&gt;Query&lt;/strong&gt; and click on &lt;em&gt;compact&lt;/em&gt; in &lt;strong&gt;Convert to...&lt;/strong&gt; option. A new pane with the query will open. 
Copy the displayed query and try it in another tab. 
It should provide JSON data - you're set.  &lt;/p&gt;
&lt;p&gt;To make things as easy as they can be, let's use bash command &lt;code&gt;curl&lt;/code&gt; to make a request. 
&lt;code&gt;curl&lt;/code&gt; will take a URL to call as an argument, and the output will be directed to a file, like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl 'url_to_request' &amp;gt; my_data.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The actual example is a bit longer, mainly because API parameters in Overpass are quite verbose.
Check my script &lt;a href="https://github.com/befeleme/vegan_JMK/blob/main/run.sh"&gt;run.sh&lt;/a&gt;. I call for 4 sets of data with 5-minute breaks in between.&lt;/p&gt;
&lt;p&gt;The process of calling and storing takes place automatically. 
See my configuration file in &lt;a href="https://github.com/befeleme/vegan_JMK/blob/main/.github/workflows/scrape.yml"&gt;scrape.yml&lt;/a&gt;.
Let's ignore Python rows as they are not necessary for this project.
The configuration says that each day at 2.15 AM an Ubuntu machine copies the code from my repository, executes the &lt;code&gt;run.sh&lt;/code&gt; script and in case the files have changed, commits them to repository as user &lt;em&gt;Automated&lt;/em&gt;.  &lt;/p&gt;
&lt;p&gt;So the script runs every night but it commits now and then - when someone changes the restaurant's data. 
The big benefit is I can track changes to the &lt;a href="https://github.com/befeleme/vegan_JMK/commit/5cad11ed48baee9880c5b60d0464ccf19fedc46b"&gt;date&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As a result there are several JSON files in &lt;code&gt;output&lt;/code&gt; folder.
Let's connect them with the map!&lt;/p&gt;
&lt;h2&gt;Point the map to remote data&lt;/h2&gt;
&lt;p&gt;Pasting data to the map as it was shown in the previous post isn't the right way here.&lt;/p&gt;
&lt;p&gt;I want to display different layers of data (100% plant-serving places, places with some options...- one layer per each JSON file from my repository).
For each layer I want to set different color and properties. 
This is achieved by setting &lt;strong&gt;Remote data&lt;/strong&gt; in Layers.&lt;/p&gt;
&lt;p&gt;&lt;img alt="layers" src="./images/umap-layers-overview.png"&gt;
&lt;img alt="remote" src="./images/umap-layers-remote.png"&gt;&lt;/p&gt;
&lt;p&gt;There is a field for URL with data. That's great. As it happens, we have an accessible remote storage of the data - we only need to paste the URL to &lt;strong&gt;raw&lt;/strong&gt; data, so that uMap parses it correctly.
You'll get the raw data by clicking on the respective button.
&lt;img alt="raw-data" src="./images/gh-raw-file.png"&gt;&lt;/p&gt;
&lt;p&gt;Fill in the marked fields and click &lt;strong&gt;Save&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="remote-data" src="./images/umap-remote.png"&gt;&lt;/p&gt;
&lt;p&gt;One layer of data is imported and, what's more, it will be updated every time someone changes underlaying information.&lt;/p&gt;
&lt;h2&gt;The result&lt;/h2&gt;
&lt;iframe width="100%" height="600px" frameborder="0" allowfullscreen src="//umap.openstreetmap.fr/en/map/vege-jmk_557579?scaleControl=false&amp;miniMap=false&amp;scrollWheelZoom=false&amp;zoomControl=true&amp;allowEdit=false&amp;moreControl=true&amp;searchControl=null&amp;tilelayersControl=null&amp;embedControl=null&amp;datalayersControl=true&amp;onLoadPanel=none&amp;captionBar=false&amp;datalayers=1584303%2C1584302%2C1584304%2C1581977%2C1581976%2C1581961%2C1581969#15/49.1991/16.6104"&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="//umap.openstreetmap.fr/en/map/vege-jmk_557579"&gt;See full screen&lt;/a&gt;&lt;/p&gt;</content><category term="OpenStreetMap"></category><category term="mapping"></category><category term="uMap"></category><category term="EN"></category></entry><entry><title>Edulog #3</title><link href="https://karolinasurma.eu/edulog-3.html" rel="alternate"></link><published>2021-03-12T17:03:00+01:00</published><updated>2021-03-12T17:03:00+01:00</updated><author><name>Karo</name></author><id>tag:karolinasurma.eu,2021-03-12:/edulog-3.html</id><summary type="html">&lt;p&gt;I started the new job on March 1st and all of my unfinished texts remain this way.
The format of this weekly accomplishments may become more bi-weekly... &lt;/p&gt;
&lt;h2&gt;Last week I learned&lt;/h2&gt;
&lt;p&gt;Mostly the stuff related to my new workplace.&lt;/p&gt;
&lt;p&gt;RPM packages&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My daily lecture - &lt;a href="https://docs.fedoraproject.org/en-US/packaging-guidelines/"&gt;Packaging Guidelines&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;And their &lt;a href="https://docs.fedoraproject.org/en-US/packaging-guidelines/Python/"&gt;Pythonic version …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;I started the new job on March 1st and all of my unfinished texts remain this way.
The format of this weekly accomplishments may become more bi-weekly... &lt;/p&gt;
&lt;h2&gt;Last week I learned&lt;/h2&gt;
&lt;p&gt;Mostly the stuff related to my new workplace.&lt;/p&gt;
&lt;p&gt;RPM packages&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;My daily lecture - &lt;a href="https://docs.fedoraproject.org/en-US/packaging-guidelines/"&gt;Packaging Guidelines&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;And their &lt;a href="https://docs.fedoraproject.org/en-US/packaging-guidelines/Python/"&gt;Pythonic version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.fedoraproject.org/en-US/packaging-guidelines/ReviewGuidelines/"&gt;How to review RPM spec files&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python packages &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://packaging.python.org/tutorials/packaging-projects/"&gt;Tutorial on packaging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Community related&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Crash course on &lt;a href="https://pythondev.readthedocs.io/diversity.html"&gt;diversity in Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;German snippets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I continue to fill in &lt;a href="https://apps.ankiweb.net/"&gt;Anki&lt;/a&gt; with new vocabulary and revise the old one.
  I find it the best flash card application, mobile &lt;a href="https://f-droid.org/en/packages/com.ichi2.anki/"&gt;AnkiDroid can be found on f-droid&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;"es" can be skipped if the whole clause plays the role of subject (2).
If the main clause stays at the beginning, there must be pronoun subject present, and the clause is followed by a comma (1a, 1b).
The only applicable pronoun subject is "es", "das" can't be used instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;1a) &lt;strong&gt;Es&lt;/strong&gt; ist notwendig, alle Aufgaben durchzusehen.&lt;/p&gt;
&lt;p&gt;1b) Notwendig ist &lt;strong&gt;es&lt;/strong&gt;, alle Aufgaben durchzusehen.&lt;/p&gt;
&lt;p&gt;2) Alle Aufgaben durchzusehen ist notwendig.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Polish snippets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I read &lt;a href="https://lubimyczytac.pl/ksiazka/4944147/krol"&gt;Król&lt;/a&gt; by Szczepan Twardoch. 
  The best way to spend your evenings in lockdown.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Weekly notes"></category><category term="education"></category><category term="EN"></category></entry><entry><title>Edulog #2</title><link href="https://karolinasurma.eu/edulog-2.html" rel="alternate"></link><published>2021-02-25T13:03:00+01:00</published><updated>2021-02-25T13:03:00+01:00</updated><author><name>Karo</name></author><id>tag:karolinasurma.eu,2021-02-25:/edulog-2.html</id><summary type="html">&lt;p&gt;My "free" month is at its end and I decided to spend most of the time doing whatever I felt like to.
This includes taking long walks, playing board games and watching Doctor Who's last season.  &lt;/p&gt;
&lt;p&gt;I received plenty of information about onboarding at my new employer which is held …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My "free" month is at its end and I decided to spend most of the time doing whatever I felt like to.
This includes taking long walks, playing board games and watching Doctor Who's last season.  &lt;/p&gt;
&lt;p&gt;I received plenty of information about onboarding at my new employer which is held online.
Even though it was my call to switch jobs in the middle of pandemic, I still feel a bit uneasy when it comes to 100 % remote work for the next months.&lt;/p&gt;
&lt;h2&gt;Accomplishments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;changed processing of the underlying data of my map. 
  I added a Python script that sorts restaurants into 4 categories depending on present tags.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Last week&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Read about &lt;a href="https://www.python.org/dev/peps/pep-0636/"&gt;Pattern Matching&lt;/a&gt;, the new planned feature in Python 3.10 and tried to wrap my head around the concept.&lt;/li&gt;
&lt;li&gt;Attended a few talks on &lt;a href="https://www.devconf.info/cz/"&gt;DevConf&lt;/a&gt;.&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.slideshare.net/DariaGrudzien/junioring-101-how-not-to-go-bonkers-at-the-start-devconfcz-2021"&gt;Junioring 101&lt;/a&gt; by Daria Grudzień - I need to implement all of this :D&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devconfcz2021.sched.com/event/gmSb/containers-are-linux-but-what-does-it-mean"&gt;Containers are Linux&lt;/a&gt; - hands-on workshop with the basics of virtualization. Quite fun and rewarding.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Listened to a few episodes of &lt;a href="https://www.easygerman.org/podcast"&gt;Easy German Podcast&lt;/a&gt; and I still find it the best out there for B2 level.
  My favourite podcast for walking!&lt;/li&gt;
&lt;li&gt;Listened to an episode about women in project management called &lt;a href="https://pmhappyhour.com/012-2/"&gt;&lt;em&gt;Sassy or assertive&lt;/em&gt;&lt;/a&gt; followed by reading the beginning of famous book &lt;a href="https://www.goodreads.com/book/show/16071764-lean-in"&gt;&lt;em&gt;Lean in&lt;/em&gt;&lt;/a&gt; by Sheryl Sandberg. 
  Both very interesting but I find the diversity and discrimination topic increasingly harder to take, knowing I have no tools to change the system. 
  I'd better focus on my job.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Plans and hopes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I found out about &lt;a href="https://cs50.harvard.edu/x/2021/"&gt;CS50&lt;/a&gt; and decided to take a look at C lectures. &lt;/li&gt;
&lt;/ul&gt;</content><category term="Weekly notes"></category><category term="education"></category><category term="EN"></category></entry><entry><title>Draw a map! (1/2)</title><link href="https://karolinasurma.eu/draw-a-map-1.html" rel="alternate"></link><published>2021-02-24T14:38:00+01:00</published><updated>2021-02-24T14:38:00+01:00</updated><author><name>Karo</name></author><id>tag:karolinasurma.eu,2021-02-24:/draw-a-map-1.html</id><summary type="html">&lt;h2&gt;uMap&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://umap.openstreetmap.fr/en/"&gt;uMap&lt;/a&gt; is a tool to create custom maps on the OpenStreetMap layers.
In order to start creating maps, one needs to have an &lt;strong&gt;OSM account&lt;/strong&gt; and click on "Create a map" on the uMap homepage.
There is a few possibilities how to get data to the map.&lt;/p&gt;
&lt;h3&gt;Language course …&lt;/h3&gt;</summary><content type="html">&lt;h2&gt;uMap&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://umap.openstreetmap.fr/en/"&gt;uMap&lt;/a&gt; is a tool to create custom maps on the OpenStreetMap layers.
In order to start creating maps, one needs to have an &lt;strong&gt;OSM account&lt;/strong&gt; and click on "Create a map" on the uMap homepage.
There is a few possibilities how to get data to the map.&lt;/p&gt;
&lt;h3&gt;Language course in Wrocław&lt;/h3&gt;
&lt;p&gt;Your friend is going to Wrocław for a language course. 
They want to know where to eat the best &lt;em&gt;pierogi&lt;/em&gt; in the city. 
You want to show them additionally the &lt;em&gt;campus area&lt;/em&gt; as well as some best &lt;em&gt;walking routes&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you need a pinpoint, shape and line drawings on the map&lt;/li&gt;
&lt;li&gt;the map shouldn't change: once you finish your edits, that's it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of this is achievable with the three options on the top-right map menu.
Additionally, one can change the background to the most suiting the needs of the moment.&lt;/p&gt;
&lt;p&gt;&lt;img alt="wroclaw" src="./images/umap-wro.png"&gt;&lt;/p&gt;
&lt;p&gt;The final map can be embedded to your site with a piece of HTML code.
See the same example as interactive map:&lt;/p&gt;
&lt;iframe width="100%" height="600px" frameborder="0" allowfullscreen src="//umap.openstreetmap.fr/en/map/wrocaw-pierogi_567141?scaleControl=false&amp;miniMap=false&amp;scrollWheelZoom=false&amp;zoomControl=true&amp;allowEdit=false&amp;moreControl=true&amp;searchControl=null&amp;tilelayersControl=null&amp;embedControl=null&amp;datalayersControl=true&amp;onLoadPanel=undefined&amp;captionBar=false"&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="//umap.openstreetmap.fr/en/map/wrocaw-pierogi_567141"&gt;See full screen&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Use case 2&lt;/h3&gt;
&lt;p&gt;Your friend now knows where to go to learn, drink beer and eat pierogi.&lt;/p&gt;
&lt;p&gt;Let's keep it even more stereotypical.&lt;/p&gt;
&lt;p&gt;They heard that there is plenty of old churches there and they want to take a look at some of them.
It's Poland so marking each church manually might be a tedious task.
It would be good to be able to &lt;strong&gt;bulk import data about churches&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no more drawing manually, automation needed&lt;/li&gt;
&lt;li&gt;the map shouldn't change: once you finish your edits, that's it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The useful tool for the task is &lt;a href="https://overpass-turbo.eu/#"&gt;Overpass Turbo&lt;/a&gt; which runs queries to OSM database and returns the results as JSON files.&lt;/p&gt;
&lt;p&gt;First, you need to establish what we're looking for. 
Using your favorite search engine for "church tag OSM" will lead you to &lt;a href="https://wiki.openstreetmap.org/wiki/Tag:building%3Dchurch"&gt;this Wiki page&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;It's time to go and ask Overpass Wizard about "building=church in Wroclaw".
When the query is ready, click "Build and run query".&lt;/p&gt;
&lt;p&gt;There is, as expected, plenty of results. Overpass shows them by default as a map layer but there is another tab available - Data. &lt;/p&gt;
&lt;p&gt;&lt;img alt="churches in Wroclaw" src="./images/overpass-churches.png"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Important note&lt;/p&gt;
&lt;p&gt;For objects that are not nodes, but polygons (as churches and other buildings often are), uMap doesn't work properly yet. &lt;/p&gt;
&lt;p&gt;In order to make it work, you shall change the query in the left panel.
Replace the lines 17-19:
&lt;code&gt;out body;
out skel qt;&lt;/code&gt;
with 
&lt;code&gt;out center qt;&lt;/code&gt;
and click the button Run on the top-left menu.
This will ensure that each polygon has a central point and can be drawn on map.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clicking on "Data" panel you'll see them formatted as JSON. How convenient! 
Let's copy and paste the data to uMap.&lt;/p&gt;
&lt;p&gt;In the import field there is plenty of possibilities: data can be imported from &lt;strong&gt;file&lt;/strong&gt;, &lt;strong&gt;url&lt;/strong&gt; or &lt;strong&gt;directly&lt;/strong&gt; to the map. 
Let's paste it directly. Format in this case should be &lt;em&gt;osm&lt;/em&gt; and the layer to import is up to you.&lt;/p&gt;
&lt;p&gt;&lt;img alt="import-umap" src="./images/umap-import.png"&gt;&lt;/p&gt;
&lt;p&gt;Click "Import" et Voila!&lt;/p&gt;
&lt;iframe width="100%" height="600px" frameborder="0" allowfullscreen src="//umap.openstreetmap.fr/en/map/one-time-import_567160?scaleControl=false&amp;miniMap=false&amp;scrollWheelZoom=false&amp;zoomControl=true&amp;allowEdit=false&amp;moreControl=true&amp;searchControl=null&amp;tilelayersControl=null&amp;embedControl=null&amp;datalayersControl=true&amp;onLoadPanel=undefined&amp;captionBar=false"&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="//umap.openstreetmap.fr/en/map/one-time-import_567160"&gt;See full screen&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that it's perfectly possible to import data to the first map as another data layer and provide your friend with both hand-drawn and imported objects.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Final words&lt;/h2&gt;
&lt;p&gt;Neither of maps will ever change (unless you edit them manually).
The next time I'll show how to ensure the data is updated automatically on a regular basis.&lt;/p&gt;</content><category term="OpenStreetMap"></category><category term="mapping"></category><category term="uMap"></category><category term="EN"></category></entry><entry><title>Edulog #1</title><link href="https://karolinasurma.eu/edulog-1.html" rel="alternate"></link><published>2021-02-18T14:30:00+01:00</published><updated>2021-02-18T14:30:00+01:00</updated><author><name>Karo</name></author><id>tag:karolinasurma.eu,2021-02-18:/edulog-1.html</id><summary type="html">&lt;h2&gt;Accomplishments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://umap.openstreetmap.fr/en/map/vege-jmk_557579"&gt;Vege JMK - dynamic map&lt;/a&gt; showing raw data + &lt;a href="https://github.com/befeleme/vegan_JMK"&gt;GitHub repo with data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://umap.openstreetmap.fr/en/map/veg-jmk-preprocessed_563879"&gt;static map&lt;/a&gt; showing preprocessed data (Proof of concept)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I shall continue on the preprocessed one, it reflects the reality better.&lt;/p&gt;
&lt;h2&gt;Last week I learned&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;how to create maps using uMap, plenty of clicking and some fun included.&lt;/li&gt;
&lt;li&gt;how …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;Accomplishments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://umap.openstreetmap.fr/en/map/vege-jmk_557579"&gt;Vege JMK - dynamic map&lt;/a&gt; showing raw data + &lt;a href="https://github.com/befeleme/vegan_JMK"&gt;GitHub repo with data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://umap.openstreetmap.fr/en/map/veg-jmk-preprocessed_563879"&gt;static map&lt;/a&gt; showing preprocessed data (Proof of concept)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I shall continue on the preprocessed one, it reflects the reality better.&lt;/p&gt;
&lt;h2&gt;Last week I learned&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;how to create maps using uMap, plenty of clicking and some fun included.&lt;/li&gt;
&lt;li&gt;how to use GitHub Actions to deploy static website to a branch that is then served.&lt;/li&gt;
&lt;li&gt;what is quick sort and how to implement it in &lt;a href="https://stackabuse.com/quicksort-in-python/"&gt;Python&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;how does the &lt;em&gt;.spec&lt;/em&gt; file look like. RPM packages are created from them.&lt;/li&gt;
&lt;li&gt;about the ways some communities work and why do they part their ways when business comes into scene.
Inspired by the story of &lt;a href="https://hedgedoc.org/history/"&gt;HegdeDoc&lt;/a&gt;, once derivate of &lt;a href="https://hackmd.io/"&gt;HackMD.io&lt;/a&gt; which I use a lot.&lt;/li&gt;
&lt;li&gt;I can't estimate development time well. It took me around 5x more to create the first map than I expected.&lt;/li&gt;
&lt;li&gt;a lot of various stuff from &lt;a href="https://junior.guru/club/"&gt;junior.guru club&lt;/a&gt;. I wasn't sure I'll benefit from there, I am. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I intend to purchase the access once I start getting paid again :)&lt;/p&gt;
&lt;h2&gt;Plans and hopes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;listen to the story of ownCloud CTO who &lt;a href="https://archive.fosdem.org/2018/schedule/event/nextcloud/"&gt;forked his repo and started Nextcloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;check out the &lt;a href="https://fallofcivilizationspodcast.com/"&gt;Fall of civilizations&lt;/a&gt; podcast &lt;/li&gt;
&lt;/ul&gt;</content><category term="Weekly notes"></category><category term="education"></category><category term="EN"></category></entry><entry><title>Advent of Code 2020</title><link href="https://karolinasurma.eu/advent-of-code-2020.html" rel="alternate"></link><published>2021-02-17T16:36:00+01:00</published><updated>2021-02-17T16:36:00+01:00</updated><author><name>Karo</name></author><id>tag:karolinasurma.eu,2021-02-17:/advent-of-code-2020.html</id><summary type="html">&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;This year I joined the challenge with the intention to make it to the end, no matter what.
I did it out of curiosity: with the aim to challenge my Python skill and have some brain exercise.
As a beginner I solved first puzzles in the previous years but …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;This year I joined the challenge with the intention to make it to the end, no matter what.
I did it out of curiosity: with the aim to challenge my Python skill and have some brain exercise.
As a beginner I solved first puzzles in the previous years but didn't make it to the 3rd day. This year was supposed to be different. &lt;/p&gt;
&lt;p&gt;Maybe &lt;strong&gt;making it to the end&lt;/strong&gt; doesn't sound like a good-enough motivation, but it worked for me.
The first days of the challenge were quite easy, backing up the the main motivation. 
Seeing your first earned stars makes you feel good about yourself, so you want to push your limits even further ;).&lt;/p&gt;
&lt;h2&gt;Puzzles&lt;/h2&gt;
&lt;p&gt;Tasks complexity grew gradually but that was to expect. 
I didn't really get to do anything else in my "free" time except for AoC in December.
This needs to be counted with when joyfully joining the challenge.&lt;/p&gt;
&lt;p&gt;AoC doesn't require any programming style, that's up to you. 
People in the &lt;a href="https://www.reddit.com/r/adventofcode/"&gt;subreddit&lt;/a&gt; were sharing their insane solutions in Minecraft, Factorio or even the whole event (all 25 days!) as Python oneliner.
My idea was to refresh a bit of everything, so the solutions look like Polish bigos. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Bigos" src="images/bigos.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;bigos, do try it at home &lt;a href="https://commons.wikimedia.org/wiki/File:Bigos_polonia.jpg"&gt;source&lt;/a&gt;&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;I used the classes once or twice, some of the puzzles were short enough to be solved with a few lines without special ordering.
With most of the puzzles I defined at least some functions as I split the task to simpler problems and then was going to tackle the big complex one.&lt;/p&gt;
&lt;p&gt;I realized that a big challenge for me is to &lt;strong&gt;sew up the big solution from small subtasks&lt;/strong&gt;. 
At some days the puzzle was too complex to see the solution straight away. 
I solved the smallest parts then, like applying the rules and evaluating the round, and at the end I engineered the working whole from the small pieces I had. 
This typically led to some level of code ugliness.&lt;/p&gt;
&lt;h3&gt;Some surprises on the way&lt;/h3&gt;
&lt;p&gt;There was A LOT of input processing. Every day new structure.&lt;/p&gt;
&lt;p&gt;A great variety of tasks appeared. 
One day you navigate the ship, another create 4D cubes just to implement the input validation rules the next one. 
Jumping from one context to another was a must.&lt;/p&gt;
&lt;p&gt;Some problems required hours to crack. 
Being still more of a beginner I saw most of the problems for the first time. 
&lt;strong&gt;I don't regret a single hour.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The best help to a programmer? Notebook and pencil. 
The second best help? Community to ask, support, laugh and uncork the bottleneck when there comes one.&lt;/p&gt;
&lt;p&gt;I realized what do the people mean when they apply the categories of not/elegant to code.
There are some places in my solutions which could use some better approach, but I wasn't fit to solve it myself right away. 
Sometimes I didn't know how, sometimes it would just take too much time.
This could have been the opportunity not to brute force the solutions, but often this was the quickest way to get to the end of the task. 
&lt;strong&gt;I intend not to start code shaming myself though.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Aaaand it is easier to code with a fever than to code with a headache. Checked so that you don't have to.&lt;/p&gt;
&lt;h2&gt;Community&lt;/h2&gt;
&lt;p&gt;I learned a lot from reading the solutions of the small group of PyLadies here in Czechia. 
When solving a puzzle I could typically see only one way to do it - mine - and seeing how differently the others think through issues was genuinely refreshing. 
A piece of competition we had using our private Leaderboard was another element of keeping the motivation up and our common Slack channel was the first place I often directed my steps to when having a struggle. &lt;/p&gt;
&lt;h2&gt;Learning opportunities&lt;/h2&gt;
&lt;p&gt;Some first timers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python standard library gems: &lt;em&gt;itertools&lt;/em&gt;, &lt;em&gt;collections&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;regular expressions (Python library &lt;em&gt;re&lt;/em&gt;): The first day of using regex was painful. The 15th - easy peasy.&lt;/li&gt;
&lt;li&gt;lambdas: great tool for lookup dictionaries&lt;/li&gt;
&lt;li&gt;I became aware of the big-O complexity, that there exist more and less efficient data types and operations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Growing in confidence:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;navigating Python docs. I started using &lt;a href="https://zealdocs.org/"&gt;Zeal&lt;/a&gt; and like it a lot&lt;/li&gt;
&lt;li&gt;understanding the task, using test data to validate my solutions&lt;/li&gt;
&lt;li&gt;breaking the task down to small pieces&lt;/li&gt;
&lt;li&gt;coding without debug printing every second line (I can keep some abstract representation of the ongoing transformations in my head)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My final score is 48/50. In the last unsolved big task I have to create a picture out of very small pieces. 
As I didn't enjoy the first half of the puzzle at all, I just can't force myself to sit and finish it off. &lt;/p&gt;
&lt;h2&gt;The end&lt;/h2&gt;
&lt;p&gt;If I started going through 2020 again, I would most certainly solve some of the puzzles differently. 
With new skills and foreseeing more problems as they occur, I would look for another approach.
I feel tempted to go through AoC from the previous years as an ongoing exercise during 2021.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note to self: don't be too optimistic about this one.&lt;/em&gt;&lt;/p&gt;</content><category term="Python"></category><category term="coding"></category><category term="AoC"></category><category term="EN"></category></entry><entry><title>Like Columbus but better</title><link href="https://karolinasurma.eu/like-columbus-but-better.html" rel="alternate"></link><published>2021-02-15T17:48:00+01:00</published><updated>2021-02-15T17:48:00+01:00</updated><author><name>Karo</name></author><id>tag:karolinasurma.eu,2021-02-15:/like-columbus-but-better.html</id><summary type="html">&lt;p&gt;It's hard for me to go out without a purpose.
Hiking in the forests, meeting some other people - count me in.
Trying all the tram routes in the city - of course. &lt;/p&gt;
&lt;p&gt;But then the pandemic comes. Or there is no one available in the city.
Or you've seen all of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's hard for me to go out without a purpose.
Hiking in the forests, meeting some other people - count me in.
Trying all the tram routes in the city - of course. &lt;/p&gt;
&lt;p&gt;But then the pandemic comes. Or there is no one available in the city.
Or you've seen all of the tram, bus, trolley, and city train routes. &lt;/p&gt;
&lt;p&gt;That could be a reason to stop leaving the flat. &lt;/p&gt;
&lt;p&gt;I hacked this laziness of mine by starting editing &lt;a href="https://www.openstreetmap.org/"&gt;OpenStreetMap&lt;/a&gt;. 
The map isn't primarily a map - it's a big open source database.
That means &lt;strong&gt;anyone&lt;/strong&gt; can edit it, and there is plenty of possibilities, from very easy to quite complicated ones. &lt;/p&gt;
&lt;h2&gt;Where you've encountered OSM&lt;/h2&gt;
&lt;p&gt;If you think you don't know OpenStreetMap, you're probably wrong.&lt;/p&gt;
&lt;p&gt;This is the default map used on Facebook. 
(They seem to have forgotten to attach the license attribution. 
Those little distracted heads!)&lt;/p&gt;
&lt;p&gt;You may know one of the popular offline mobile applications, &lt;a href="https://wiki.openstreetmap.org/wiki/OsmAnd"&gt;OsmAnd&lt;/a&gt;.
If you don't, try it. 
It has some great features helping with planning mountain hiking, especially altitude profile.&lt;/p&gt;
&lt;p&gt;The well-known maps in Czechia, &lt;a href="https://en.mapy.cz/"&gt;mapy.cz&lt;/a&gt;, use OpenStreetMap for showing foreign countries data. &lt;/p&gt;
&lt;h2&gt;Editing map&lt;/h2&gt;
&lt;p&gt;First we need to talk about where to get source information from.&lt;/p&gt;
&lt;h3&gt;Data source&lt;/h3&gt;
&lt;p&gt;As a general rule one mustn't map out of proprietary data sources like Google Maps.
The objects that are added to map should be ones you've checked yourself - &lt;strong&gt;you went there and saw it with your own eyes&lt;/strong&gt;. 
It's called "survey" or "local knowledge" in the data sources and it's the most important thing you should know about OSM.&lt;/p&gt;
&lt;p&gt;No automatic imports, no drawing from satellite photos when editing Czechia or broadly: Europe.
It's a community project and anyone can become a contributor.&lt;/p&gt;
&lt;h3&gt;Point of interest (POI)&lt;/h3&gt;
&lt;p&gt;Each point of interest (like shop, bar, cinema), line (streets) or polygon (buildings, areas) consist of tags.
A tag is a key-value pair. &lt;/p&gt;
&lt;p&gt;Drawing paths can be also fun, but today I will focus on editing POIs only.&lt;/p&gt;
&lt;p&gt;&lt;img alt="JOSM-keys" src="images/osm-poi-key-value.png"&gt;
&lt;em&gt;example tagging of a POI - restaurant&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Many of us have a thing or two that are important for us in the city. 
It may be &lt;strong&gt;wheelchair accessibility&lt;/strong&gt;, &lt;strong&gt;free parking&lt;/strong&gt;, &lt;strong&gt;public toilets&lt;/strong&gt;, &lt;strong&gt;recycling points&lt;/strong&gt;, &lt;strong&gt;outdoor seating&lt;/strong&gt; or type of diet in the restaurants.&lt;/p&gt;
&lt;p&gt;A protip gratis: There is no sense in trying to map everything around you, you'll become exhausted and demotivated very soon.
Pick something you care for or is fun for you.
 It's better to be a constant contributor on small changes than big one-time shot.&lt;/p&gt;
&lt;p&gt;One of my things is adding vegan places to the map.
Whenever a restaurant has a considerable amount of vegan meal on menu, I take a photo of the door labels and edit it at home.
As you can see in the image above, the respective key is "diet:vegan" and the value should be one of &lt;em&gt;yes&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt;, &lt;em&gt;only&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="A restaurant" src="images/restaurant_photo.jpg"&gt;
&lt;em&gt;when editing a restaurant at home, I update all the information, not only diet&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Mapping the defaults&lt;/h3&gt;
&lt;p&gt;There is an issue with &lt;em&gt;no&lt;/em&gt;, though. 
The original philosophy of OSM was: we don't map defaults. 
So if in Czechia the default is "no vegan options", we shouldn't add the tag "diet:vegan=no" to map.
For the same reason one shouldn't map for example the possibility to pay with cash. &lt;/p&gt;
&lt;p&gt;These days it changes, mostly because of rising popularity of mobile applications like StreetComplete, which gamify the tag hunt. 
The more people use them, the more defaults are being mapped and it seems there is hardly anything that can be done to prevent the trend.&lt;/p&gt;
&lt;p&gt;The defaults may be also interesting for people building their own applications on the top of OSM data, eg. rendering 3D city models.
As a side note, beware typos, it may end up like &lt;a href="https://www.engadget.com/flight-simulator-open-street-map-building-205545509.html"&gt;in this case&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Finding your tag&lt;/h3&gt;
&lt;p&gt;OSM has got a tremendous &lt;a href="https://wiki.openstreetmap.org/wiki/Main_Page"&gt;Wiki&lt;/a&gt;. It so big it's overwhelming.
One of the greatest features there are the tags explanations.&lt;/p&gt;
&lt;p&gt;It happens a lot to me that I'm not sure how to tag a particular thing. 
When preparing a talk, I was looking for a dog hairdresser to build a &lt;em&gt;funny&lt;/em&gt; example.
Typing "dog hairdresser tag osm" to my favorite search engine resulted in an immediate shot: &lt;a href="https://wiki.openstreetmap.org/wiki/Tag:shop%3Dpet_grooming"&gt;the answer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I highly recommend diving into the Wiki to look for the answers.&lt;/p&gt;
&lt;h3&gt;Editors&lt;/h3&gt;
&lt;p&gt;To edit maps you need to create a free account on &lt;a href="https://www.openstreetmap.org/"&gt;OpenStreetMap&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Then you can edit: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;directly in the web browser using iD editor. See &lt;a href="https://learnosm.org/en/beginner/id-editor/"&gt;guide&lt;/a&gt; for more details.&lt;/li&gt;
&lt;li&gt;using a desktop application, like &lt;a href="https://josm.openstreetmap.de/"&gt;JOSM&lt;/a&gt;. See &lt;a href="https://learnosm.org/en/josm/"&gt;guide&lt;/a&gt; for more details.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you find an object you want to edit, you are free to add, edit or remove a desired tag.&lt;/p&gt;
&lt;p&gt;I mentioned &lt;a href="https://wiki.openstreetmap.org/wiki/StreetComplete"&gt;StreetComplete&lt;/a&gt; earlier, that's another approach to OSM.
It's a mobile application (available on both F-Droid and Play Store).
Here you don't plan what to add to map, it's designed the opposite way: it navigates you through quests in the city. 
When you walk past a quest, you can answer a simple question: "Is XXX still here?" or "What kind of YYY is here?"
There is gazillion types of quests, I have disabled around half of them. :) &lt;/p&gt;
&lt;p&gt;&lt;img alt="street" src="images/street-complete-1.png"&gt;  &lt;img alt="map" src="images/street-complete-2.png"&gt;&lt;/p&gt;
&lt;p&gt;Every time you upload some of the answers, you get plenty of stars and some achievements get unlocked. 
You may find yourself hunting the quests in the places you'd otherwise never go. &lt;/p&gt;
&lt;p&gt;Consider yourself warned.&lt;/p&gt;</content><category term="OpenStreetMap"></category><category term="mapping"></category><category term="EN"></category></entry><entry><title>What does it take to create a blog</title><link href="https://karolinasurma.eu/what-does-it-take-to-create-a-blog.html" rel="alternate"></link><published>2021-02-09T21:11:00+01:00</published><updated>2021-02-09T21:11:00+01:00</updated><author><name>Karo</name></author><id>tag:karolinasurma.eu,2021-02-09:/what-does-it-take-to-create-a-blog.html</id><summary type="html">&lt;h2&gt;Why blogging?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;My old domain was unused for the last few years. I had little idea what to put there though.&lt;/li&gt;
&lt;li&gt;Having a &lt;strong&gt;showcase&lt;/strong&gt; of the things I do which may be interesting for the other people. &lt;/li&gt;
&lt;li&gt;I &lt;strong&gt;like writing&lt;/strong&gt; and miss it since I switched to tech. &lt;/li&gt;
&lt;li&gt;There are …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;Why blogging?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;My old domain was unused for the last few years. I had little idea what to put there though.&lt;/li&gt;
&lt;li&gt;Having a &lt;strong&gt;showcase&lt;/strong&gt; of the things I do which may be interesting for the other people. &lt;/li&gt;
&lt;li&gt;I &lt;strong&gt;like writing&lt;/strong&gt; and miss it since I switched to tech. &lt;/li&gt;
&lt;li&gt;There are all those tips from seniors to juniors about &lt;strong&gt;writing down the lists of what you've learnt&lt;/strong&gt;. 
This makes sense as juniors tend to underestimate their progress in time.
So I treat this as an opportunity to have some edulog, maybe helpful for others, maybe just for me.&lt;/li&gt;
&lt;li&gt;And, of course, I just wanted to &lt;strong&gt;build something with my own hands&lt;/strong&gt;! Well, not from scratch in this case.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;To blog or HOW to blog - that is the question&lt;/h2&gt;
&lt;p&gt;As a teenager I just created an account on Blogger and successfully blogged for another 10 years or longer. 
Blogger belongs to Google now and will probably end in a few years.&lt;/p&gt;
&lt;p&gt;And being a wannabe coder, well, you just kind of &lt;strong&gt;have to&lt;/strong&gt; create your own solution, isn't it right?
I've been using Python for pretty much everything in the last three years. 
Those, however, were just &lt;strong&gt;scripts&lt;/strong&gt;. 
You run them with &lt;code&gt;python file.py&lt;/code&gt; and never actually get to build a whole solution.
I felt like I lack the experience in &lt;strong&gt;gluing things together&lt;/strong&gt;. 
It seemed like a natural solution to build upon my Python knowledge.&lt;/p&gt;
&lt;h3&gt;Django? Yes, but.&lt;/h3&gt;
&lt;p&gt;How about Django? Django sounds cool! 
And I've been to a &lt;a href="https://tutorial.djangogirls.org/en/"&gt;Django Girls workshop&lt;/a&gt;, so this couldn't be that complicated, could it? 
I've spent a great time playing with a web application in Django. I really have! 
The app is connected to a &lt;em&gt;Postgres database&lt;/em&gt;, uses those cool &lt;em&gt;Jinja templates&lt;/em&gt;, I even used &lt;em&gt;Bootstrap&lt;/em&gt; to make the site responsive, wrote a nice &lt;em&gt;admin interface&lt;/em&gt; and made it possible to use &lt;em&gt;Markdown&lt;/em&gt; in the blog posts. &lt;/p&gt;
&lt;p&gt;Then I realized I need &lt;em&gt;categories&lt;/em&gt; and plenty of other changes that will require more time spent digging in application models and Jinja.
I started reading about deployment and went through what &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt; has to offer.&lt;/p&gt;
&lt;p&gt;I learned about the &lt;code&gt;DJANGO_SECRET_KEY&lt;/code&gt; when I published the code of my app on GitHub and immediately got a warning e-mail that I've compromised something important.&lt;/p&gt;
&lt;p&gt;The time has passed and I wasn't any closer to having the actual website out there. 
In fact it felt like learning programming: &lt;strong&gt;with each step I was even further from my goal as I realized how much more I need to learn to make it happen&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;Static and simple&lt;/h3&gt;
&lt;p&gt;I went to look for something more down-to-earth. 
I remembered &lt;a href="https://roboprojekt.pyladies.cz/"&gt;our project's blog&lt;/a&gt; which was on the other side of the complexity spectrum: there were Markdown blog posts and deployment on commit on GitHub. 
No databases, minimum code, static site - suddenly this sounded so beautifully simple!
Why to overcomplicate things?
I took a long look at that other blog and realized it was built on the extension to &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; engine, which is written in Python. 
I looked also at Jekyll and later Hugo, but decided to stick to what seemed like a nice case of &lt;em&gt;gluing&lt;/em&gt; task I intended to perform.&lt;/p&gt;
&lt;h2&gt;Pelican&lt;/h2&gt;
&lt;p&gt;First things first: I went through all the &lt;a href="http://www.pelicanthemes.com/"&gt;Pelican themes&lt;/a&gt;. I was looking for something minimalistic yet pretty with a support of categories and optionally tags. 
That was surprisingly tough task.
One of the last on the list was &lt;a href="https://github.com/petrnohejl/MinimalXY"&gt;MinimalXY&lt;/a&gt; by Petr Nohejl (funnily enough, a developer from Brno) which I felt in love with as soon as I saw it. &lt;/p&gt;
&lt;p&gt;So I was decided and could frantically start with edits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;deleting plenty of code I didn't want. That was a nice exercise in reading someone else's code. &lt;/li&gt;
&lt;li&gt;removing Google Analytics related code for now as I'm not sure I want to track anything here.&lt;/li&gt;
&lt;li&gt;installing the Open Sans font locally rather than fetching it from Google Fonts. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Out there&lt;/h2&gt;
&lt;p&gt;I was never inclined to frontend and have limited knowledge about its technologies. 
The edits I've made were nice small tasks forcing me to look for explanations around the Internet. 
It makes me still a bit uneasy that I don't understand everything in the project.&lt;/p&gt;
&lt;p&gt;Inspired by Honza Javorek's &lt;a href="https://github.com/honzajavorek/honzajavorek.cz/blob/master/weeknotes.py"&gt;weeknotes script&lt;/a&gt; I made a template generator to make it easier to add new posts. Thanks!
Many other inspirations came from the open source projects on GitHub. 
I took a look at deployment routines, went through some people's configurations and repository structures. &lt;/p&gt;
&lt;p&gt;And all of this crash course took place in around a week.
This time I feel like a winner :).&lt;/p&gt;</content><category term="Blogging"></category><category term="pelican"></category><category term="coding"></category><category term="EN"></category></entry></feed>