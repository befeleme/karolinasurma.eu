<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A blog</title><link href="https://karolinasurma.eu/" rel="alternate"></link><link href="https://karolinasurma.eu/feeds/all.atom.xml" rel="self"></link><id>https://karolinasurma.eu/</id><updated>2021-02-17T16:36:00+01:00</updated><entry><title>Advent of Code 2020</title><link href="https://karolinasurma.eu/advent-of-code-2020.html" rel="alternate"></link><published>2021-02-17T16:36:00+01:00</published><updated>2021-02-17T16:36:00+01:00</updated><author><name>Karo</name></author><id>tag:karolinasurma.eu,2021-02-17:/advent-of-code-2020.html</id><summary type="html">&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;This year I joined the challenge with the intention to make it to the end, no matter what.
I did it out of curiosity: with the aim to challenge my Python skill and have some brain exercise.
As a beginner I solved first puzzles in the previous years but …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;This year I joined the challenge with the intention to make it to the end, no matter what.
I did it out of curiosity: with the aim to challenge my Python skill and have some brain exercise.
As a beginner I solved first puzzles in the previous years but didn't make it to the 3rd day. This year was supposed to be different. &lt;/p&gt;
&lt;p&gt;Maybe &lt;strong&gt;making it to the end&lt;/strong&gt; doesn't sound like a good-enough motivation, but it worked for me.
The first days of the challenge were quite easy, backing up the the main motivation. 
Seeing your first earned stars makes you feel good about yourself, so you want to push your limits even further ;).&lt;/p&gt;
&lt;h2&gt;Puzzles&lt;/h2&gt;
&lt;p&gt;Tasks complexity grew gradually but that was to expect. 
I didn't really get to do anything else in my "free" time except for AoC in December.
This needs to be counted with when joyfully joining the challenge.&lt;/p&gt;
&lt;p&gt;AoC doesn't require any programming style, that's up to you. 
People in the &lt;a href="https://www.reddit.com/r/adventofcode/"&gt;subreddit&lt;/a&gt; were sharing their insane solutions in Minecraft, Factorio or even the whole event (all 25 days!) as Python oneliner.
My idea was to refresh a bit of everything, so the solutions look like Polish bigos. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Bigos" src="images/bigos.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;bigos, do try it at home &lt;a href="https://commons.wikimedia.org/wiki/File:Bigos_polonia.jpg"&gt;source&lt;/a&gt;&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;I used the classes once or twice, some of the puzzles were short enough to be solved with a few lines without special ordering.
With most of the puzzles I defined at least some functions as I split the task to simpler problems and then was going to tackle the big complex one.&lt;/p&gt;
&lt;p&gt;I realized that a big challenge for me is to &lt;strong&gt;sew up the big solution from small subtasks&lt;/strong&gt;. 
At some days the puzzle was too complex to see the solution straight away. 
I solved the smallest parts then, like applying the rules and evaluating the round, and at the end I engineered the working whole from the small pieces I had. 
This typically led to some level of code ugliness.&lt;/p&gt;
&lt;h3&gt;Some surprises on the way&lt;/h3&gt;
&lt;p&gt;There was A LOT of input processing. Every day new structure.&lt;/p&gt;
&lt;p&gt;A great variety of tasks appeared. 
One day you navigate the ship, another create 4D cubes just to implement the input validation rules the next one. 
Jumping from one context to another was a must.&lt;/p&gt;
&lt;p&gt;Some problems required hours to crack. 
Being still more of a beginner I saw most of the problems for the first time. 
&lt;strong&gt;I don't regret a single hour.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The best help to a programmer? Notebook and pencil. 
The second best help? Community to ask, support, laugh and uncork the bottleneck when there comes one.&lt;/p&gt;
&lt;p&gt;I realized what do the people mean when they apply the categories of not/elegant to code.
There are some places in my solutions which could use some better approach, but I wasn't fit to solve it myself right away. 
Sometimes I didn't know how, sometimes it would just take too much time.
This could have been the opportunity not to brute force the solutions, but often this was the quickest way to get to the end of the task. 
&lt;strong&gt;I intend not to start code shaming myself though.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Aaaand it is easier to code with a fever than to code with a headache. Checked so that you don't have to.&lt;/p&gt;
&lt;h2&gt;Community&lt;/h2&gt;
&lt;p&gt;I learned a lot from reading the solutions of the small group of PyLadies here in Czechia. 
When solving a puzzle I could typically see only one way to do it - mine - and seeing how differently the others think through issues was genuinely refreshing. 
A piece of competition we had using our private Leaderboard was another element of keeping the motivation up and our common Slack channel was the first place I often directed my steps to when having a struggle. &lt;/p&gt;
&lt;h2&gt;Learning opportunities&lt;/h2&gt;
&lt;p&gt;Some first timers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python standard library gems: &lt;em&gt;itertools&lt;/em&gt;, &lt;em&gt;collections&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;regular expressions (Python library &lt;em&gt;re&lt;/em&gt;): The first day of using regex was painful. The 15th - easy peasy.&lt;/li&gt;
&lt;li&gt;lambdas: great tool for lookup dictionaries&lt;/li&gt;
&lt;li&gt;I became aware of the big-O complexity, that there exist more and less efficient data types and operations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Growing in confidence:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;navigating Python docs. I started using &lt;a href="https://zealdocs.org/"&gt;Zeal&lt;/a&gt; and like it a lot&lt;/li&gt;
&lt;li&gt;understanding the task, using test data to validate my solutions&lt;/li&gt;
&lt;li&gt;breaking the task down to small pieces&lt;/li&gt;
&lt;li&gt;coding without debug printing every second line (I can keep some abstract representation of the ongoing transformations in my head)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My final score is 48/50. In the last unsolved big task I have to create a picture out of very small pieces. 
As I didn't enjoy the first half of the puzzle at all, I just can't force myself to sit and finish it off. &lt;/p&gt;
&lt;h2&gt;The end&lt;/h2&gt;
&lt;p&gt;If I started going through 2020 again, I would most certainly solve some of the puzzles differently. 
With new skills and foreseeing more problems as they occur, I would look for another approach.
I feel tempted to go through AoC from the previous years as an ongoing exercise during 2021.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note to self: don't be too optimistic about this one.&lt;/em&gt;&lt;/p&gt;</content><category term="Python"></category><category term="coding"></category><category term="AoC"></category><category term="EN"></category></entry><entry><title>Like Columbus but better</title><link href="https://karolinasurma.eu/like-columbus-but-better.html" rel="alternate"></link><published>2021-02-15T17:48:00+01:00</published><updated>2021-02-15T17:48:00+01:00</updated><author><name>Karo</name></author><id>tag:karolinasurma.eu,2021-02-15:/like-columbus-but-better.html</id><summary type="html">&lt;p&gt;It's hard for me to go out without a purpose.
Hiking in the forests, meeting some other people - count me in.
Trying all the tram routes in the city - of course. &lt;/p&gt;
&lt;p&gt;But then the pandemic comes. Or there is no one available in the city.
Or you've seen all of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's hard for me to go out without a purpose.
Hiking in the forests, meeting some other people - count me in.
Trying all the tram routes in the city - of course. &lt;/p&gt;
&lt;p&gt;But then the pandemic comes. Or there is no one available in the city.
Or you've seen all of the tram, bus, trolley, and city train routes. &lt;/p&gt;
&lt;p&gt;That could be a reason to stop leaving the flat. &lt;/p&gt;
&lt;p&gt;I hacked this laziness of mine by starting editing &lt;a href="https://www.openstreetmap.org/"&gt;OpenStreetMap&lt;/a&gt;. 
The map isn't primarily a map - it's a big open source database.
That means &lt;strong&gt;anyone&lt;/strong&gt; can edit it, and there is plenty of possibilities, from very easy to quite complicated ones. &lt;/p&gt;
&lt;h2&gt;Where you've encountered OSM&lt;/h2&gt;
&lt;p&gt;If you think you don't know OpenStreetMap, you're probably wrong.&lt;/p&gt;
&lt;p&gt;This is the default map used on Facebook. 
(They seem to have forgotten to attach the license attribution. 
Those little distracted heads!)&lt;/p&gt;
&lt;p&gt;You may know one of the popular offline mobile applications, &lt;a href="https://wiki.openstreetmap.org/wiki/OsmAnd"&gt;OsmAnd&lt;/a&gt;.
If you don't, try it. 
It has some grat features helping with planning mountain hiking, especially altitude profile.&lt;/p&gt;
&lt;p&gt;The well-known maps in Czechia, &lt;a href="https://en.mapy.cz/"&gt;mapy.cz&lt;/a&gt;, use OpenStreetMap for showing foreign countries data. &lt;/p&gt;
&lt;h2&gt;Editing map&lt;/h2&gt;
&lt;p&gt;First we need to talk about where to get source information from.&lt;/p&gt;
&lt;h3&gt;Data source&lt;/h3&gt;
&lt;p&gt;As a general rule one mustn't map out of proprietary data sources like Google Maps.
The objects that are added to map should be ones you've checked yourself - &lt;strong&gt;you went there and saw it with your own eyes&lt;/strong&gt;. 
It's called "survey" or "local knowledge" in the data sources and it's the most important thing you should know about OSM.&lt;/p&gt;
&lt;p&gt;No automatic imports, no drawing from satellite photos when editing Czechia or broadly: Europe.
It's a community project and anyone can become a contributor.&lt;/p&gt;
&lt;h3&gt;Point of interest (POI)&lt;/h3&gt;
&lt;p&gt;Each point of interest (like shop, bar, cinema), line (streets) or polygon (buildings, areas) consist of tags.
A tag is a key-value pair. &lt;/p&gt;
&lt;p&gt;Drawing paths can be also fun, but today I will focus on editing POIs only.&lt;/p&gt;
&lt;p&gt;&lt;img alt="JOSM-keys" src="images/osm-poi-key-value.png"&gt;
&lt;em&gt;example tagging of a POI - restaurant&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Many of us have a thing or two that are important for us in the city. 
It may be &lt;strong&gt;wheelchair accessibility&lt;/strong&gt;, &lt;strong&gt;free parking&lt;/strong&gt;, &lt;strong&gt;public toilets&lt;/strong&gt;, &lt;strong&gt;recycling points&lt;/strong&gt;, &lt;strong&gt;outdoor seating&lt;/strong&gt; or type of diet in the restaurants.&lt;/p&gt;
&lt;p&gt;A protip gratis: There is no sense in trying to map everything around you, you'll become exhausted and demotivated very soon.
Pick something you care for or is fun for you.
 It's better to be a constant contributor on small changes than big one-time shot.&lt;/p&gt;
&lt;p&gt;One of my things is adding vegan places to the map.
Whenever a restaurant has a considerable amount of vegan meal on menu, I take a photo of the door labels and edit it at home.
As you can see in the image above, the respective key is "diet:vegan" and the value should be one of &lt;em&gt;yes&lt;/em&gt;, &lt;em&gt;no&lt;/em&gt;, &lt;em&gt;only&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="A restaurant" src="images/restaurant_photo.jpg"&gt;
&lt;em&gt;when editing a restaurant at home, I update all the information, not only diet&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Mapping the defaults&lt;/h3&gt;
&lt;p&gt;There is an issue with &lt;em&gt;no&lt;/em&gt;, though. 
The original philosophy of OSM was: we don't map defaults. 
So if in Czechia the default is "no vegan options", we shouldn't add the tag "diet:vegan=no" to map.
For the same reason one shouldn't map for example the possibility to pay with cash. &lt;/p&gt;
&lt;p&gt;These days it changes, mostly because of rising popularity of mobile applications like StreetComplete, which gamify the tag hunt. 
The more people use them, the more defaults are being mapped and it seems there is hardly anything that can be done to prevent the trend.&lt;/p&gt;
&lt;p&gt;The defaults may be also interesting for people building their own applications on the top of OSM data, eg. rendering 3D city models.
As a side note, beware typos, it may end up like &lt;a href="https://www.engadget.com/flight-simulator-open-street-map-building-205545509.html"&gt;in this case&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Finding your tag&lt;/h3&gt;
&lt;p&gt;OSM has got a tremendous &lt;a href="https://wiki.openstreetmap.org/wiki/Main_Page"&gt;Wiki&lt;/a&gt;. It so big it's overwhelming.
One of the greatest features there are the tags explanations.&lt;/p&gt;
&lt;p&gt;It happens a lot to me that I'm not sure how to tag a particular thing. 
When preparing a talk, I was looking for a dog hairdresser to build a &lt;em&gt;funny&lt;/em&gt; example.
Typing "dog hairdresser tag osm" to my favourite search engine resulted in an immediate shot: &lt;a href="https://wiki.openstreetmap.org/wiki/Tag:shop%3Dpet_grooming"&gt;the answer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I highly recommend diving into the Wiki to look for the answers.&lt;/p&gt;
&lt;h3&gt;Editors&lt;/h3&gt;
&lt;p&gt;To edit maps you need to create a free account on &lt;a href="https://www.openstreetmap.org/"&gt;OpenStreetMap&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Then you can edit: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;directly in the web browser using iD editor. See &lt;a href="https://learnosm.org/en/beginner/id-editor/"&gt;guide&lt;/a&gt; for more details.&lt;/li&gt;
&lt;li&gt;using a desktop application, like &lt;a href="https://josm.openstreetmap.de/"&gt;JOSM&lt;/a&gt;. See &lt;a href="https://learnosm.org/en/josm/"&gt;guide&lt;/a&gt; for more details.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you find an object you want to edit, you are free to add, edit or remove a desired tag.&lt;/p&gt;
&lt;p&gt;I mentioned &lt;a href="https://wiki.openstreetmap.org/wiki/StreetComplete"&gt;StreetComplete&lt;/a&gt; earlier, that's another approach to OSM.
It's a mobile application (available on both F-Droid and Play Store).
Here you don't plan what to add to map, it's designed the opposite way: it navigates you through quests in the city. 
When you walk past a quest, you can answer a simple question: "Is XXX still here?" or "What kind of YYY is here?"
There is gazillion types of quests, I have disabled around half of them. :) &lt;/p&gt;
&lt;p&gt;&lt;img alt="street" src="images/street-complete-1.png"&gt;  &lt;img alt="map" src="images/street-complete-2.png"&gt;&lt;/p&gt;
&lt;p&gt;Every time you upload some of the answers, you get plenty of stars and some achievements get unlocked. 
You may find yourself hunting the quests in the places you'd otherwise never go. &lt;/p&gt;
&lt;p&gt;Consider yourself warned.&lt;/p&gt;</content><category term="OpenStreetMap"></category><category term="mapping"></category><category term="EN"></category></entry><entry><title>What does it take to create a blog</title><link href="https://karolinasurma.eu/what-does-it-take-to-create-a-blog.html" rel="alternate"></link><published>2021-02-09T21:11:00+01:00</published><updated>2021-02-09T21:11:00+01:00</updated><author><name>Karo</name></author><id>tag:karolinasurma.eu,2021-02-09:/what-does-it-take-to-create-a-blog.html</id><summary type="html">&lt;h2&gt;Why blogging?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;My old domain was unused for the last few years. I had little idea what to put there though.&lt;/li&gt;
&lt;li&gt;Having a &lt;strong&gt;showcase&lt;/strong&gt; of the things I do which may be interesting for the other people. &lt;/li&gt;
&lt;li&gt;I &lt;strong&gt;like writing&lt;/strong&gt; and miss it since I switched to tech. &lt;/li&gt;
&lt;li&gt;There are …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;Why blogging?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;My old domain was unused for the last few years. I had little idea what to put there though.&lt;/li&gt;
&lt;li&gt;Having a &lt;strong&gt;showcase&lt;/strong&gt; of the things I do which may be interesting for the other people. &lt;/li&gt;
&lt;li&gt;I &lt;strong&gt;like writing&lt;/strong&gt; and miss it since I switched to tech. &lt;/li&gt;
&lt;li&gt;There are all those tips from seniors to juniors about &lt;strong&gt;writing down the lists of what you've learnt&lt;/strong&gt;. 
This makes sense as juniors tend to underestimate their progress in time.
So I treat this as an opportunity to have some edulog, maybe helpful for others, maybe just for me.&lt;/li&gt;
&lt;li&gt;And, of course, I just wanted to &lt;strong&gt;build something with my own hands&lt;/strong&gt;! Well, not from scratch in this case.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;To blog or HOW to blog - that is the question&lt;/h2&gt;
&lt;p&gt;As a teenager I just created an account on Blogger and successfully blogged for another 10 years or longer. 
Blogger belongs to Google now and will probably end in a few years.&lt;/p&gt;
&lt;p&gt;And being a wannabe coder, well, you just kind of &lt;strong&gt;have to&lt;/strong&gt; create your own solution, isn't it right?
I've been using Python for pretty much everything in the last three years. 
Those, however, were just &lt;strong&gt;scripts&lt;/strong&gt;. 
You run them with &lt;code&gt;python file.py&lt;/code&gt; and never actually get to build a whole solution.
I felt like I lack the experience in &lt;strong&gt;gluing things together&lt;/strong&gt;. 
It seemed like a natural solution to build upon my Python knowledge.&lt;/p&gt;
&lt;h3&gt;Django? Yes, but.&lt;/h3&gt;
&lt;p&gt;How about Django? Django sounds cool! 
And I've been to a &lt;a href="https://tutorial.djangogirls.org/en/"&gt;Django Girls workshop&lt;/a&gt;, so this couldn't be that complicated, could it? 
I've spent a great time playing with a web application in Django. I really have! 
The app is connected to a &lt;em&gt;Postgres database&lt;/em&gt;, uses those cool &lt;em&gt;Jinja templates&lt;/em&gt;, I even used &lt;em&gt;Bootstrap&lt;/em&gt; to make the site responsive, wrote a nice &lt;em&gt;admin interface&lt;/em&gt; and made it possible to use &lt;em&gt;Markdown&lt;/em&gt; in the blog posts. &lt;/p&gt;
&lt;p&gt;Then I realized I need &lt;em&gt;categories&lt;/em&gt; and plenty of other changes that will require more time spent digging in application models and Jinja.
I started reading about deployment and went through what &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt; has to offer.&lt;/p&gt;
&lt;p&gt;I learned about the &lt;code&gt;DJANGO_SECRET_KEY&lt;/code&gt; when I published the code of my app on GitHub and immediately got a warning e-mail that I've compromised something important.&lt;/p&gt;
&lt;p&gt;The time has passed and I wasn't any closer to having the actual website out there. 
In fact it felt like learning programming: &lt;strong&gt;with each step I was even further from my goal as I realized how much more I need to learn to make it happen&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;Static and simple&lt;/h3&gt;
&lt;p&gt;I went to look for something more down-to-earth. 
I remembered &lt;a href="https://roboprojekt.pyladies.cz/"&gt;our project's blog&lt;/a&gt; which was on the other side of the complexity spectrum: there were Markdown blog posts and deployment on commit on GitHub. 
No databases, minimum code, static site - suddenly this sounded so beautifully simple!
Why to overcomplicate things?
I took a long look at that other blog and realized it was built on the extension to &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; engine, which is written in Python. 
I looked also at Jekyll and later Hugo, but decided to stick to what seemed like a nice case of &lt;em&gt;gluing&lt;/em&gt; task I intended to perform.&lt;/p&gt;
&lt;h2&gt;Pelican&lt;/h2&gt;
&lt;p&gt;First things first: I went through all the &lt;a href="http://www.pelicanthemes.com/"&gt;Pelican themes&lt;/a&gt;. I was looking for something minimalistic yet pretty with a support of categories and optionally tags. 
That was surprisingly tough task.
One of the last on the list was &lt;a href="https://github.com/petrnohejl/MinimalXY"&gt;MinimalXY&lt;/a&gt; by Petr Nohejl (funnily enough, a developer from Brno) which I felt in love with as soon as I saw it. &lt;/p&gt;
&lt;p&gt;So I was decided and could frantically start with edits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;deleting plenty of code I didn't want. That was a nice exercise in reading someone else's code. &lt;/li&gt;
&lt;li&gt;removing Google Analytics related code for now as I'm not sure I want to track anything here.&lt;/li&gt;
&lt;li&gt;installing the Open Sans font locally rather than fetching it from Google Fonts. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Out there&lt;/h2&gt;
&lt;p&gt;I was never inclined to frontend and have limited knowledge about its technologies. 
The edits I've made were nice small tasks forcing me to look for explanations around the Internet. 
It makes me still a bit uneasy that I don't understand everything in the project.&lt;/p&gt;
&lt;p&gt;Inspired by Honza Javorek's &lt;a href="https://github.com/honzajavorek/honzajavorek.cz/blob/master/weeknotes.py"&gt;weeknotes script&lt;/a&gt; I made a template generator to make it easier to add new posts. Thanks!
Many other inspirations came from the open source projects on GitHub. 
I took a look at deployment routines, went through some people's configurations and repository structures. &lt;/p&gt;
&lt;p&gt;And all of this crash course took place in around a week.
This time I feel like a winner :).&lt;/p&gt;</content><category term="Blogging"></category><category term="pelican"></category><category term="coding"></category><category term="EN"></category></entry></feed>